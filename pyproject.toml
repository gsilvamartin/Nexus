[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "nexus"
version = "0.1.0"
description = "NEXUS - Sistema de Desenvolvimento Autônomo de Próxima Geração"
authors = ["NEXUS Team <team@nexus.dev>"]
readme = "README.md"
packages = [{include = "nexus"}]

[tool.poetry.dependencies]
python = "^3.11"
asyncio = "^3.4.3"
aiohttp = "^3.9.0"
pydantic = "^2.5.0"
sqlalchemy = "^2.0.0"
alembic = "^1.13.0"
redis = "^5.0.0"
celery = "^5.3.0"
numpy = "^1.26.0"
scipy = "^1.11.0"
networkx = "^3.2.0"
neo4j = "^5.15.0"
torch = "^2.1.0"
transformers = "^4.36.0"
langchain = "^0.1.0"
openai = "^1.6.0"
anthropic = "^0.8.0"
fastapi = "^0.104.0"
uvicorn = "^0.24.0"
kubernetes = "^28.1.0"
docker = "^6.1.0"
prometheus-client = "^0.19.0"
structlog = "^23.2.0"
typer = "^0.9.0"
rich = "^13.7.0"
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
black = "^23.11.0"
isort = "^5.12.0"
mypy = "^1.7.0"
ruff = "^0.1.6"

[tool.poetry.group.dev.dependencies]
jupyter = "^1.0.0"
ipython = "^8.17.0"
pytest-cov = "^4.1.0"
pre-commit = "^3.5.0"

[tool.poetry.group.ml.dependencies]
scikit-learn = "^1.3.0"
pandas = "^2.1.0"
matplotlib = "^3.8.0"
seaborn = "^0.13.0"
plotly = "^5.17.0"
optuna = "^3.4.0"

[tool.poetry.group.quantum.dependencies]
qiskit = "^0.45.0"
cirq = "^1.3.0"
pennylane = "^0.33.0"

[tool.poetry.scripts]
nexus = "nexus.cli:main"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --strict-markers --strict-config --cov=nexus"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
